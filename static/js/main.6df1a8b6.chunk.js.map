{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["socket","io","App","useState","mes","setMes","errorNameStr","setErrorNameStr","errorMesStr","setErrorMesStr","erroName","setErrorName","erroMes","setErrorMes","value","setValue","name","setName","useEffect","on","messages","mesNew","messagesAnchorRef","useRef","current","scrollIntoView","behavior","className","map","m","user","message","id","ref","onChange","e","currentTarget","trim","onClick","emit","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OAGMA,EAASC,IAAG,yCAyFHC,MAtFf,WAAgB,IAAD,EACWC,mBAAgB,IAD3B,mBACJC,EADI,KACCC,EADD,OAE6BF,mBAAyB,MAFtD,mBAEJG,EAFI,KAEUC,EAFV,OAG2BJ,mBAAyB,MAHpD,mBAGJK,EAHI,KAGSC,EAHT,OAIsBN,oBAAkB,GAJxC,mBAIJO,EAJI,KAIMC,EAJN,OAKoBR,oBAAkB,GALtC,mBAKJS,EALI,KAKKC,EALL,OAMeV,mBAAS,SANxB,mBAMJW,EANI,KAMGC,EANH,OAOaZ,mBAAS,IAPtB,mBAOJa,EAPI,KAOEC,EAPF,KAQXC,qBAAU,WACNlB,EAAOmB,GAAG,iBAAkB,SAACC,GACzBf,EAAOe,MAEXpB,EAAOmB,GAAG,oBAAqB,SAACE,GAE5BhB,GAAO,SAACD,GAAD,4BAAaA,GAAb,CAAkBiB,YAE9B,IACH,IAAMC,EAAoBC,iBAAuB,MAyCjD,OAxCAL,qBAAU,WAAO,IAAD,EACZ,UAAAI,EAAkBE,eAAlB,SAA2BC,eAAe,CAACC,SAAU,aACtD,CAACtB,IAuCA,sBAAKuB,UAAU,MAAf,UACI,sBAAKA,UAAW,UAAhB,UACKvB,EAAIwB,KAAI,SAAAC,GACL,OACI,gCACI,8BAAIA,EAAEC,KAAKd,KAAX,SADJ,IAC6Ba,EAAEE,QAC3B,yBAFMF,EAAEG,OAMpB,qBAAKC,IAAKX,OAEd,gCACI,uBAAOR,MAAOE,EAAMkB,SAjCN,SAACC,GACa,KAAjCA,EAAEC,cAActB,MAAMuB,SACrB1B,GAAa,GACbJ,EAAgB,OAEpBU,EAAQkB,EAAEC,cAActB,UA6BhB,wBAAQwB,QA1BpB,WAEgB,KAATtB,GACCL,GAAa,GACbJ,EAAgB,qFAEhBP,EAAOuC,KAAK,mBAAoBvB,GAChCC,EAAQ,MAmBJ,kBACCP,EAAW,+BAAOJ,IAAuB,QAE9C,sBAAKqB,UAAW,cAAhB,UACI,0BAAUb,MAAOA,EAAOoB,SA7CT,SAACC,GACY,KAAjCA,EAAEC,cAActB,MAAMuB,SACrBxB,GAAY,GACZJ,EAAe,OAEnBM,EAASoB,EAAEC,cAActB,UAyCjB,wBAAQwB,QAxDG,WAEN,KAAVxB,GACCD,GAAY,GACZJ,EAAe,qFAEfT,EAAOuC,KAAK,sBAAuBzB,GACnCC,EAAS,MAiDL,kBACCH,EAAU,+BAAOJ,IAAsB,YCvEzCgC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bb,M","file":"static/js/main.6df1a8b6.chunk.js","sourcesContent":["import React, {ChangeEvent, useEffect, useRef, useState} from 'react';\nimport io from 'socket.io-client';\nimport './App.css';\nconst socket = io('https://chat-back-test.herokuapp.com/')\n// const socket = io('http://localhost:3009/')\n\nfunction App() {\n    const [mes, setMes] = useState<any[]>([])\n    const [errorNameStr, setErrorNameStr] = useState <string | null>(null)\n    const [errorMesStr, setErrorMesStr] = useState <string | null>(null)\n    const [erroName, setErrorName] = useState<boolean>(false)\n    const [erroMes, setErrorMes] = useState<boolean>(false)\n    const [value, setValue] = useState('hello')\n    const [name, setName] = useState('')\n    useEffect(() => {\n        socket.on('messages-init', ((messages: any) => {\n            setMes(messages)\n        }))\n        socket.on('new-message-sent', ((mesNew: any) => {\n\n            setMes((mes) => [...mes, mesNew])\n        }))\n    }, [])\n    const messagesAnchorRef = useRef<HTMLDivElement>(null)\n    useEffect(() => {\n        messagesAnchorRef.current?.scrollIntoView({behavior: 'smooth'})\n    }, [mes])\n\n    const onClickHandler = () => {\n\n        if(value === '') {\n            setErrorMes(true)\n            setErrorMesStr('Заполните поле')\n        } else {\n            socket.emit('client-message-sent', value)\n            setValue('')\n        }\n    }\n    const changeValueHandler = (e: ChangeEvent<HTMLTextAreaElement>) => {\n        if(e.currentTarget.value.trim() !== ''){\n            setErrorMes(false)\n            setErrorMesStr(null)\n        }\n        setValue(e.currentTarget.value)\n    }\n    const changeNameHandler = (e: ChangeEvent<HTMLInputElement>) => {\n        if(e.currentTarget.value.trim() !== ''){\n            setErrorName(false)\n            setErrorNameStr(null)\n        }\n        setName(e.currentTarget.value)\n    }\n\n    function onSentNameHandler() {\n\n        if(name === '') {\n            setErrorName(true)\n            setErrorNameStr('Заполните поле')\n        } else {\n            socket.emit('client-name-sent', name)\n            setName('')\n        }\n    }\n\n    return (\n        <div className=\"App\">\n            <div className={'message'}>\n                {mes.map(m => {\n                    return (\n                        <div key={m.id}>\n                            <b>{m.user.name} : </b> {m.message}\n                            <hr/>\n                        </div>\n                    )\n                })}\n                <div ref={messagesAnchorRef}/>\n            </div>\n            <div>\n                <input value={name} onChange={changeNameHandler}/>\n                <button onClick={onSentNameHandler}>Send</button>\n                {erroName ? <span>{errorNameStr}</span> : null}\n            </div>\n            <div className={'sendMessage'}>\n                <textarea value={value} onChange={changeValueHandler}/>\n                <button onClick={onClickHandler}>Send</button>\n                {erroMes ? <span>{errorMesStr}</span> : null}\n            </div>\n\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}