{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["socket","io","App","useState","mes","setMes","value","setValue","name","setName","useEffect","on","messages","mesNew","className","map","m","user","message","id","onChange","e","currentTarget","onClick","emit","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAIMA,EAASC,IAAG,0BAsDHC,MArDf,WAAgB,IAAD,EACSC,mBAAgB,IADzB,mBACNC,EADM,KACDC,EADC,OAGeF,mBAAS,SAHxB,mBAGJG,EAHI,KAGGC,EAHH,OAIaJ,mBAAS,IAJtB,mBAIJK,EAJI,KAIEC,EAJF,KA4BX,OAvBAC,qBAAU,WACNV,EAAOW,GAAG,iBAAkB,SAACC,GACzBP,EAAOO,MAEXZ,EAAOW,GAAG,oBAAqB,SAACE,GAC5BR,GAAO,SAACD,GAAD,4BAAaA,GAAb,CAAkBS,YAE9B,IAiBH,sBAAKC,UAAU,MAAf,UACE,qBAAKA,UAAW,UAAhB,SACGV,EAAIW,KAAI,SAAAC,GACP,OACI,gCACE,8BAAIA,EAAEC,KAAKT,KAAX,SADF,IAC2BQ,EAAEE,QAC3B,yBAFQF,EAAEG,SAOlB,gCACI,uBAAOb,MAAOE,EAAMY,SArBF,SAACC,GACvBZ,EAAQY,EAAEC,cAAchB,UAqBpB,wBAAQiB,QAlBhB,WACIvB,EAAOwB,KAAK,mBAAoBhB,IAiB5B,qBAEJ,sBAAKM,UAAW,cAAhB,UACI,0BAAUR,MAAOA,EAAOc,SA5BL,SAACC,GAC1Bd,EAASc,EAAEC,cAAchB,UA4BnB,wBAAQiB,QAjCO,WACnBvB,EAAOwB,KAAK,sBAAuBlB,GACnCC,EAAS,KA+BL,yBCrCGkB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bb,M","file":"static/js/main.81e090cb.chunk.js","sourcesContent":["import React, {ChangeEvent, useEffect, useState} from 'react';\nimport io from 'socket.io-client';\nimport './App.css';\n// const socket = io('https://chat-back-test.herokuapp.com/')\nconst socket = io('http://localhost:3009/')\nfunction App() {\n  const [mes, setMes] = useState<any[]>([]\n  )\n    const [value, setValue] = useState('hello')\n    const [name, setName] = useState('')\n    useEffect(() => {\n        socket.on('messages-init', ((messages: any) => {\n            setMes(messages)\n        }))\n        socket.on('new-message-sent', ((mesNew:any) => {\n            setMes((mes) => [...mes, mesNew])\n        }))\n    }, [])\n    const onClickHandler = () => {\n        socket.emit('client-message-sent', value)\n        setValue('')\n    }\n    const changeValueHandler = (e:ChangeEvent<HTMLTextAreaElement>) => {\n      setValue(e.currentTarget.value)\n    }\n    const changeNameHandler = (e:ChangeEvent<HTMLInputElement>) => {\n        setName(e.currentTarget.value)\n    }\n\n    function onSentNameHandler() {\n        socket.emit('client-name-sent', name)\n    }\n\n    return (\n    <div className=\"App\">\n      <div className={'message'}>\n        {mes.map(m => {\n          return (\n              <div key={m.id}>\n                <b>{m.user.name} : </b> {m.message}\n                <hr/>\n              </div>\n          )\n        })}\n      </div>\n        <div>\n            <input value={name} onChange={ changeNameHandler}/>\n            <button onClick={onSentNameHandler}>Send</button>\n        </div>\n        <div className={'sendMessage'}>\n            <textarea value={value} onChange={ changeValueHandler}/>\n            <button onClick={onClickHandler}>Send</button>\n        </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}